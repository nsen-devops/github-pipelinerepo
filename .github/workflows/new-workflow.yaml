# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: n-test-cicd-cluster    # Add your cluster name here.
  GKE_ZONE: us-central1-c   # Add your cluster zone here.
  DEPLOYMENT_NAME: nginx-deployment # Add your deployment name here.
  IMAGE: nitin-image-repo

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Setup gcloud CLI
    - uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    # Set up kustomize
    #    - name: Set up Kustomize
    # run: |-
    #   cd ./gke-workload/
    #   chmod u+x ./kustomization.yaml

    # Deploy the Docker image to the GKE cluster
    #- name: Deploy
    # run: |-
    #   ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
    #   ./kustomize build . | kubectl apply -f -
    #   kubectl rollout status deployment/$DEPLOYMENT_NAME
    #   kubectl get services -o wide
    - name: 'deploy with gke-deploy cli'
      uses: 'google-github-actions/deploy-gke-container@v0.1'
      with:
        image: 'gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA'
        app_name: '$DEPLOYMENT_NAME'
        zone: '$GKE_ZONE'
        cluster_name: '$GKE_CLUSTER'
        project_id: 'PROJECT_ID'
        namespace: 'default'
        expose: '80'
    
    - name: 'get-deployments'
      shell: bash
      run: |
        kubectl get pods -n my-namespace
        kubectl get deployment -n my-namespace
